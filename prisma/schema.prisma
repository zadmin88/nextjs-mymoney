// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String?   @unique
  emailVerified   DateTime?
  image           String?
  hashedPassword  String?
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  favoriteIds     String[] @db.ObjectId

  accounts Account[]
  moneyAccounts MoneyAccount[]
  movements Movement[]
}

model Account {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId             String   @db.ObjectId
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.String
  access_token       String?  @db.String
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.String
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model MoneyAccount {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  name         String    
  accountType  String    
  balance      Float     @default(0)
  creditLimit  Float?
  currency     String    @default("COP")

  user User @relation(fields: [id], references: [id], onDelete: Cascade)
  movements    Movement[] 
}


model Movement {
  id            String @id @default(auto()) @map("_id") @db.ObjectId
  description   String
  amount        Float
  category      String
  movementType  String    
  isTransfer    Boolean
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  account MoneyAccount @relation(fields: [id], references: [id], onDelete: Cascade)
  user User @relation(fields: [id], references: [id], onDelete: Cascade)
}
